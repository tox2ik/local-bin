#!/bin/bash
self=$0

n=0
for i; do
	let n=n+1
	case $i in
			-v) let next=n+1; verb=${!next} ;;
			-v1) verb=1;;
			-v2) verb=2;;
			-v3) verb=3;;
			-q) verb=0;;
	esac
done

if ! [[ $verb =~ ^[0-9]$ ]]; then
	verb=0
fi

_host() { hostname; }
function _ioz { iozone -M -+T -+h `_host` "$@"; }

function q2   { _ioz  -I -i{0,1,2} -s 2m   -r 128k |_f;}
function q20  { _ioz  -I -i{0,1,2} -s 20m  -r 128k |_f;}
function q200 { _ioz  -I -i{0,1,2} -s 200m -r 128k |_f;}

function s16  { _ioz -aI -i{0,1,2} -q 64k -g 16m    |_f;}
function l64  { _ioz -aI -i{0,1,2} -y 128k -n 64m -g 64m |_f; }

function a0   { _ioz -aI -i{0,1,2}         |_f;}
function a2   { _ioz -aI -i{0,1,2} -s 2m   |_f;}
function a20  { _ioz -aI -i{0,1,2} -s 20m  |_f;}
function a50  { _ioz -aI -i{0,1,2} -s 50m  |_f;}
function a100 { _ioz -aI -i{0,1,2} -s 100m |_f;}
function a200 { _ioz -aI -i{0,1,2} -s 200m |_f;}

function z16  { _ioz -aI -i{0,1,2} -s 16m -z  |_f;}
function z64  { _ioz -aI -i{0,1,2} -s 64m -z  |_f;}
function z128 { _ioz -aI -i{0,1,2} -s 128m -z |_f;}
function z264 { _ioz -aI -i{0,1,2} -s 264m -z |_f;}


#function io { (cd $1; bash $self $2 -v0 | tr -d '[a-z] '); }
#function ioa { for i in 2 10 20 100 200; do _math $(io $1 "a$i") / $(io $2 "a$i"); done; }
#function ioq { for i in 2 10 20 100 200; do _math $(io $1 "q$i") / $(io $2 "q$i"); done; }
#function ioa100 { _math $(io $1 'a100') / $(io $2 'a100'); }
#function ioq100 { _math $(io $1 'q100') / $(io $2 'q100'); }

function _strip_contributors { sed -e /Contributors/,/Skidanov/d; }
function _summarize { awk -v verb=$verb -f ${BASH_SOURCE[0]}.awk; }
function _table { column -ts $'\t'; }
function _f { i=".iozones.$fn.$(_identify)"; tee "$i" | _summarize | _table;
		echo Run ended: $(date) >> "$i";
		echo $i >> "$i";
		echo $fn >> "$i";
		time=$(grep Run "$i" | sed 's/[^:]\+: //' | xargs -I{} date +%s -d '{}' | sort -nr | paste -sd- | bc)
		echo test duration: $time >> "$i";
}
function _math { echo "scale=3;$*" | bc; }
function _identify {
	block=$(basename $(df --output=source . | sed 1d))
	sys=$(find /sys/devices/ -name $block | xargs realpath | sort -u )
	function part_dev_models {
		for i in $( find $sys/slaves/ -type l \
				| sed 's/[0-9]\+$//' \
				| xargs -n1 basename \
				| xargs -n1 find /sys/devices -name \
				| xargs -n1 realpath \
				| sort -u); do
			cat $i/device/model
		done


	}
	model=$( (2>/dev/null cat $sys/../device/model ||
			  2>/dev/null cat $sys/device/model ||
			  2>/dev/null cat $sys/../slaves/*/device/model || part_dev_models ) \
			| sed 's/ \+$//; s/ /_/g' \
			| awk '{ _[$0]++ } END { for (i in _) { print i "-x" _[i] } }' )
	time=$(date +%Y.%j.%H%M)
	echo $model.$time

}

function _label_at_path {
	lsblk -o name,mountpoint,partlabel  -l |
	awk -v mp=${1:-/G/tmp}  'NR>1 && NF>=2 && !_[$2]++ && index(mp, $2) {  print $1 "-" $3 }'
}


if type "$1" &>/dev/null; then
	fn=$1; shift
	$fn "$@"
elif [[ $# -eq 0 ]]; then
	grep 'function.[a-z]' $0
fi
