#!/bin/bash
# ...

df_input() {
		block=1g unit=gigs
		[[ $1 = m ]] && { block=1m unit=megs; }
		[[ $1 = t ]] && { block=1t unit=ters; }
		{
		 df  -B$block -T  -x{fuse.sshfs,overlay,devtmpfs,tmpfs} | grep -v -e /snap/ -e Filesystem | sort -b -k 2,2 -k 1,1 -k 7,7
		} | sort -u -k1,1 | sort -k 6n
}


cols() {
	local out=60
	if [[ -n $COLUMNS ]]; then
		out=$COLUMNS
	elif type tput &>/dev/null; then
		out=$(tput cols)
	fi
	echo $out
}

label() {
	local devpath=${1-/dev/sda}
	label=$(lsblk -no label $devpath)
	if [[ -z $label ]]; then
		label=$(lsblk -no partlabel $devpath)
	fi
	if [[ -z $label ]]; then
		label=$(lsblk -no mountpoint $devpath)
	fi
	echo $label
}

bar() {
	local n=$1 replace=${2:-:}
	#printf "%0${n}d" 0 | tr '0' "$replace"
	printf "%0${n}d" 0 | sed "s/0/$replace/g"
}



l_name=15
l_size=5
l_left=5
l_percent=3

if [[ $1 = m ]]; then
	l_name=15
	l_size=12
	l_left=12
fi


width_text=$(( $l_name + $l_size + $l_left + $l_percent + 4))
width_bar=$( echo "scale=3; (`cols` -$width_text -2 )" | bc )
bar_end=$( echo "scale=3; (`cols` -$width_text -2 -1 -3 -2)" | bc )

printf "%${l_name}s %-${l_size}s%-${l_left}s %-${l_percent}s ...%s...\n" fs size left % "`bar $bar_end ' '`"

#bar $width_text T
#bar $bar_end '.'
#echo -n ','

#bar $width_text T
#bar $bar_end ' '
#echo -n '<'
#echo


while read fs type gigs used left use mounted; do
	if [[ $? -ne 0 ]]; then
		echo FAIL: $fs
	fi
	use=${use%%%}

	width_bar=$( echo "scale=3; (`cols` -$width_text -2 )/100 * $use" | bc )
	width_bar=${width_bar/.*/}
	[[ -z $width_bar ]] && width_bar=0

	block=─
	block=▆

	printf "%${l_name}s %-${l_size}s%-${l_left}d %-${l_percent}s %s\n" `label $fs` $gigs $left $use `bar $width_bar "$block"`
done < <(df_input "$@")


