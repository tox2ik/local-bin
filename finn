#!/usr/bin/env bash

# simplified interface to find
# examples:
#
#    # read-ahead (cat everything into fs-cache)
#    finn images.from.archives/ -f -0 | xargs -0 -n3 -P40 cat | pv >/dev/null

Debug=0

FIND=/usr/bin/find
if [ -f $HOME/opt/findutils/libexec/gnubin/find ]; then
	FIND=$HOME/opt/findutils/libexec/gnubin/find
fi

#export FIND

where=.

isElementIn () {
	local e match="$1"
	shift
	for e; do [[ "$e" == "$match" ]] && return 0; done
	return 1
}

declare -A short=(
	[-d]=-type\ d
	[-f]=-type\ f
	[-td]=-type\ d
	[-tf]=-type\ f
	[-tl]=-type\ l
	[-n]=-name
	[-i]=-iname
	[-max]=-maxdepth
	[-min]=-mindepth
	[-S]=-size
	[-0]=-print0
)

declare -a before_other=(
	-maxdepth
	-mindepth
)

declare -a arguments_global=()
declare -a arguments=()
declare -a terms=()
declare -a path_arguments=()

and_next=0
and_next_short=0
for i in "$@"; do

	if [ "$i" = "@" ] ; then Debug=1; continue; fi

	if [ ${short[$i]+true} ]; then
		for si in ${short[$i]}; do

			if isElementIn "$si" "${before_other[@]}"; then
				arguments_global+=("$si")
				and_next=1 # e.g. -maxdepth 55 . next is 55
				# make a map for these to ?
			else
				arguments+=($si)
			fi

		done
		continue
	fi


	if [ $and_next -eq 1 ]; then
		arguments_global+=("$i")
		and_next=0
		continue
	fi


	if [ -d "$i" ];then
		path_arguments+=( "$i" )
		continue
	fi

	if [[ $i =~ ^[+-] ]]; then
		arguments+=("$i")
	else
		terms+=("$i")
	fi

done


if [ $Debug -gt 0 ];then
	echo
	echo Path: "${path_arguments[@]}"
	echo GLOB: "${arguments_global[@]}"
	echo ARG..: "${arguments[@]}"
	let ai=1; for a in "${arguments[@]}"; do
		echo "   .$((ai++)):" $a
	done
	echo F: find  "${path_arguments[@]}"  "${arguments_global[@]}"  "${arguments[@]}"
	echo find  "${path_arguments[@]}"  "${arguments_global[@]}"  "${arguments[@]}"
	echo
else
	#exec
	declare -a tt=()
	for i in ${terms[@]}; do
		tt+=(-iname)
		tt+=(\*"$i"\*)
	done
	set -x
	$FIND  "${path_arguments[@]}"  "${arguments_global[@]}"  "${arguments[@]}" "${tt[@]}"
		
fi



# v1
#
#for i; do
#	if [ "$i" = "@" ]; then D=1;      break; fi
#	if [ -d "$i"    ]; then where=$i; continue; fi
#	arg="$(
#		echo @%$i | sed -E '
#		s/^@%//
#		s/^-t?f$/-type f/
#		s/^-t?d$/-type d/
#		s/^-t?l$/-type l/
#		s/^-n$/-name/
#		s/^-i$/-iname/
#	')" # echo bug: echo -n '-n' -n
#	if [[ -z "$args" ]]; then ws=''; else ws=' ';  fi # avoid appending a whitespace to a lone arg
#	if [[ -n "$arg"  ]]; then args="$args$ws$arg"; fi
#done
#if [[ "$1" == "$args" ]]; then
#	eval $FIND $where -name "\*$1\*"
#	exit
#fi
#if [ $D -gt 0 ];then
#	echo $FIND $where $args 
#fi
#exec $FIND $where $args


