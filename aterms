#!/bin/bash
#Xauth
#xrdb ~/.Xdefaults

#
#     -misc-fixed-medium-r-*-*-13-*-*-*-*-*-*-*         
#     -xos4-terminus-medium-*-*-*-14-*-72-*-*-*-*-*    
#     -adobe-helvetica-medium-r-*-*-12-*-*-*-*-*-*-*  
#                                                    
#                                                      
# -sgi-*-medium-r-*-*-13-*-*-*-*-*-*-*

       # fn=-misc-fixed-medium-*-*-*-14-*-*-*-*-*-*-* 
       # fb=-misc-fixed-*--*-*-*-14-*-*-*-*-*-*-* 
       # fn=-xos4-terminus-*-r-*-*-18-*-*-*-*-*-*-*	
       # fb=-xos4-terminus-medium-r-*-*-18-*-*-*-*-*-*-*	
	# fn=-sgi-*-medium-r-*-*-13-*-*-*-*-*-*-*
        #fn=-xos4-terminus-medium-r-*-12-*

	#fb=-sgi-*-bold-r-*-*-*-*-*-*-*-*-*-*



	small_fn='xft:Terminus:size=12'
	small_fb='xft:UbuntuMono:size=12'

	f_small="-fb $small_fb -fn $small_fn"



    fn=-xos4-terminus-*-r-*-12-*
    fb=-xos4-terminus-*-r-*-12-*

	fn=-*-proggyclean-*-*-*-*-13-*-*-*-*-*-*-*
	fb=-*-proggyclean-medium-*-*-*-13-*-*-*-*-*-*-*

	proggy13=" -fb $fn -fn $fb "


	fterminus14=-*-terminus-*-*-*-*-14-*-*-*-*-*-*-*

	fnru=-xos4-*-*-r-*-*-14-*-*-*-*-*-*-r
	fbru=-xos4-*-*-r-*-*-14-*-*-*-*-*-*-r

	fnBIG=-misc-*-*-*-*-*-15-*-*-*-*-*-*-*
	fbBIG=-misc-*-*-*-*-*-15-*-*-*-*-*-*-*

	fnBIG=-misc-*-*-*-*-*-15-*-*-*-*-*-*-1
	fbBIG=-misc-*-*-*-*-*-15-*-*-*-*-*-*-1

	fnBIG=-*-terminus-*-*-*-*-14-*-*-*-*-*-*-1
	fbBIG=-*-terminus-*-*-*-*-14-*-*-*-*-*-*-1

	fnmpc=-xos4-*-*-r-*-*-14-*-*-*-*-*-*-*
	fbmpc=-xos4-*-bold-r-*-*-14-*-*-*-*-*-*-*

    #fn_t14=-xos4-terminus-*-*-*-14-*
    #fb_t14=-xos4-terminus-*-*-*-14-*
    fn_t14=xft:Terminus:size=12
    fb_t14=xft:Terminus:style=bold

	terminus14="-fn $fn_t14 -fb $fb_t14"

	 fb=$fn

	color="-fg 7 "
	argsu="-ls -tr -sh 25 -fb $fb -fn $fn  -w 0  -b 3 +sb"  # Urxvt 

argsa="-ls -tr -sh 5 -fb $fb -fn $fn -bw 0 -ib 3 +sb"  
argsa_big="-ls -tr -sh 5 -fb $fbBIG -fn $fnBIG -bw 0 -ib 3 +sb"  
argsb="$color -ls -tr -sh 5 -fb $fb -fn $fn -bw 0 -ib 5 -sb -trsb -sr" 
#argsf="$color -ls -tr -sh 25 -fb $fb -fn $fn -bw 0 -ib 3 -sb -trsb -sr " 
#argsf="$color -ls -tr -sh 25 -bw 0 -ib 3 -sb -trsb -sr " 
#argsfu="-ls -tr -sh 25 -fb $fb -fn $fn  -w 0  -b 3 +sb"  # Urxvt 
argsfu="-ls -tr -sh 12 -w 0  -b 3 +sb"  # Urxvt 
argsfu_big="-ls -tr -sh 25 -fb $fbBIG -fn $fnBIG  -w 0  -b 3 +sb"  # Urxvt 
logtermfile="/home/jaroslav/tmp/syslog" # the file is a fifo which syslogng logs to
argslogterm="-name logterm -ls -tr -sh 5 -fb $fb -fn $fterminus14 -bw 0 -ib 3 -sb -trsb -sr -e cat $logtermfile" 

argsr="-ls -tr -sh 5 -fb $fn -fn -xos4-*-*-*-*-*-17-*-*-*-*-*-*-* +sb"  
argsr="-ls -tr -sh 5 -fb $fbru -fn $fnru +sb"  

argsn="-ls -tr -sh 5 -fb $fbmpc -fn $fnmpc +sb"  


su='sudo su -' g='-geometry'                          
#su='sudo su -' g='-geometry'                          
	
	l='-sl 12000' s='-sl 100'

long='-sl 12000'
short='-sl 100'


function get_res {
	xrandr | awk '/\*/ { print $1 }'
}
function one { urxvt -ls $argsu  &  }

function desktop_three {

		urxvt -name URxvt_hdmi -ls +sb $long $g 149x28+725+20 &
		urxvt -name URxvt_hdmi -ls +sb $long $g 149x30+725+529 &
		urxvt -name URxvt_hdmi -ls +sb $long $g  90x59+2+7 &
}

function desktop_two {  

	if [[ $HOSTNAME == balmora ]]; then

		urxvt -name URxvt_hdmi -ls +sb $long $g 149x27+2+20 &
		urxvt -name URxvt_hdmi -ls +sb $long $g 149x31+2+511 &
		urxvt -name URxvt_hdmi -ls +sb $long $g  90x59+1198+7 &

		# local heads=$(xrandr | grep -c '\<connected\>')
		# if ishd && [ $heads -eq 2 ]; then



		#elif ishd && [ $heads -eq 1 ]; then
		#	urxvt -name URxvt_hdmi -ls +sb $long $g  90x58-1+17 &
		#	urxvt -name URxvt_hdmi -ls +sb $long $g 149x27+2+15 &
		#	urxvt -name URxvt_hdmi -ls +sb $long $g 149x31+2-14 &

		#fi
	fi
}

function koray { urxvt -fn xft:cure -fb xft:cure -letsp -3 ;}
function koray2 { 
	local f=xft:terminus:size=8; 
	urxvt -fn $f:style=bold -fb $f; 
}


function big { urxvt $l $argsfu_big  &  }
function bigaterm { aterm $l $argsa_big  &  }
function flux { aterm -name one $l $argsf  &  }
function uni { urxvt  -name one $l $argsu  &  }
function logterm { aterm  -geometry 128x67-88+13 $l $argslogterm   & }
function oneru { export LC_CTYPE=ru_RU.KOI8-R; aterm $l $argsr $g 90x38 &  }
function sone { echo  aterm  $l $argsb -fg $random_color $g 90x38 &  }


function mpc {  ncmpc; }
function ncmpc { aterm  $l $argsn $g 100x74 -e ncmpc & }
  

function fourFlux {
	n=-name\ URxvt_four
	urxvt $n -fade 20 $l $argsfu $terminus14 $g 90x31+3+2 &
	urxvt $n -fade 20 $l $argsfu $terminus14 $g 90x42+3-9 &
	urxvt $n -fade 20 $l $argsfu $terminus14 $g 117x31-4+2 &
	urxvt $n -fade 20 $l $argsfu $terminus14 $g 117x42-4-9 & 
	#local font="-fn $fn_t14 -fb $fb_t14"
	#urxvt -fade 25 $l $argsfu $font $g 90x31+3+2 &
	#urxvt -fade 25 $l $argsfu $font $g 90x42+3-9 &
	#urxvt -fade 25 $l $argsfu $font $g 117x31-4+2 &
	#urxvt -fade 25 $l $argsfu $font $g 117x42-4-9 & 
}


function rsixFlux {               
	if [[ `get_res` = "1920x1080" ]]; then
		true
		sm1='91x12+3+2'
		sm2='91x12+3+177'
		sm3='91x15+3+352'
		bg1='91x36+3-2'
		bg2='147x40-3+2'
		bg3='147x36-3-2'

		#small_fb='xft:UbuntuMono:size=12'
		small_fn='xft:Terminus:size=12'
		small_fb='xft:Terminus:bold:size=12'
		f_small="-fb $small_fb -fn $small_fn"

	else

		sm1='91X13+3+2'
		sm2='91x12+3+177'
		sm3='91x15+3+339'
		bg1='91x37+3-20'
		bg2='141x41-4+2'
		bg3='141x37-4-19' 

	fi


	sm=" +sb -name URxvt_rsix $f_small"
	cmd='-e ssh root@localhost'
	### # sm1='80x13+3+2'
	### # sm2='80x12+3+177'
	### # sm3='80x15+3+339'
	### # bg1='80x36+3-3' # bot-left
	### # bg2='128x35-4-3' # bot-right
	### # bg3='138x39-4+2' # top-right
	### # sm="-name URxvt_rsix"
	### # cmd='-e ssh -Y root@localhost'

	for res in $sm1 $sm2 $sm3 ;do 
		urxvt -fade 20 +sb $sm $l $g $res $proggy13 $cmd & sleep 0.1
		done &

	#urxvt -fade 20 +sb $sm $l $g 70x38+0+0 \
		#-fb xft:Terminus:14 -fn xft:Terminus:14 $cmd & sleep 0.1

	for res in $bg1 $bg2 $bg3 ;do 
		urxvt -fade 20 +sb $sm $l $g $res $terminus14 $cmd & sleep 0.2
		done &
} 

function ishd {
	xrandr | awk '
		BEGIN { havehd=0 }
		/\*/ { if ($1 == "1920x1080") { havehd=1 } }
		END { exit havehd == 1 ? 0 : 1; }
	'
}


if [ -z "$1" ];
then 
	#echo -e "usage: $0 one|two|three|..."; 
	echo Please give me one of the following 
	echo function names as the first argument  
	echo to spawn a new terminal emulator:
	cat $0 |grep ^function |awk '{print $2}'
	# TODO: make an awk script to put all words in an array
	# and print each one while making sure that the total 
	# umber of characters per line is less than 80
fi

#exec function
$1
